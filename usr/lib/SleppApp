import 'package:flutter/material.dart';
import 'dart:async';
import 'package:record/record.dart'; // nagrywanie audio
import 'package:path_provider/path_provider.dart';
import 'dart:io';

void main() {
  runApp(SleepMonitorApp());
}

class SleepMonitorApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Sleep Monitor',
      theme: ThemeData.dark(),
      home: SleepHomePage(),
      debugShowCheckedModeBanner: false,
    );
  }
}

class SleepHomePage extends StatefulWidget {
  @override
  _SleepHomePageState createState() => _SleepHomePageState();
}

class _SleepHomePageState extends State<SleepHomePage> {
  final record = AudioRecorder();
  bool _isRecording = false;
  String? _lastFilePath;
  List<String> _recordings = [];

  Future<void> _startRecording() async {
    if (await record.hasPermission()) {
      final dir = await getApplicationDocumentsDirectory();
      String path =
          '${dir.path}/sleep_${DateTime.now().millisecondsSinceEpoch}.m4a';
      await record.start(const RecordConfig(), path: path);
      setState(() {
        _isRecording = true;
        _lastFilePath = path;
      });
    }
  }

  Future<void> _stopRecording() async {
    final path = await record.stop();
    if (path != null) {
      setState(() {
        _isRecording = false;
        _recordings.add(path);
      });
    }
  }

  @override
  void dispose() {
    record.dispose();
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: Text("Sleep Monitor")),
      body: Column(
        mainAxisAlignment: MainAxisAlignment.center,
        children: [
          Icon(
            _isRecording ? Icons.mic : Icons.mic_none,
            size: 100,
            color: _isRecording ? Colors.redAccent : Colors.grey,
          ),
          SizedBox(height: 20),
          Text(
            _isRecording
                ? "Nagrywanie w toku... Å›pij spokojnie ðŸ˜´"
                : "Kliknij, aby rozpoczÄ…Ä‡ monitorowanie snu",
            style: TextStyle(fontSize: 18),
            textAlign: TextAlign.center,
          ),
          SizedBox(height: 40),
          ElevatedButton.icon(
            onPressed: _isRecording ? _stopRecording : _startRecording,
            icon: Icon(_isRecording ? Icons.stop : Icons.play_arrow),
            label: Text(_isRecording ? "Zatrzymaj" : "Zacznij nagrywaÄ‡"),
          ),
          SizedBox(height: 40),
          Expanded(
            child: ListView.builder(
              itemCount: _recordings.length,
              itemBuilder: (context, index) {
                return ListTile(
                  title: Text("Nagranie ${index + 1}"),
                  subtitle: Text(_recordings[index]),
                  leading: Icon(Icons.music_note),
                );
              },
            ),
          ),
        ],
      ),
    );
  }
}
